<snippet>
	<content><![CDATA[

//---------------------------------------------------------------------------//

struct dsu
{
    ll n;
    vector<ll> id,sz;

    dsu(ll n):
    n(n),id(n),sz(n){}

    void init()
    {
        FOR(i,0,n)
        id[i]=i,sz[i]=1;
    }

    ll root(ll x)
    {
        while(x!=id[x])
        {
            id[x]=id[id[x]];
            x=id[x];
        }
        return x;
    }

    void combine(ll u,ll v)
    {
        ll rt1 = root(u);
        ll rt2 = root(v);

        if(rt1==rt2)
        return;

        if(sz[rt1]>sz[rt2])
        swap(rt1,rt2);

        id[rt1] = id[rt2];
        sz[rt2] += sz[rt1];
        sz[rt1] = 0;
    }
};

typedef pair<ll,pair<ll,ll> > edge;
struct krushkal
{
    ll n;
    vector<edge> adj;
    
    krushkal(ll n):
    n(n){}

    void addEdge(ll u, ll v, ll w)
    {
        ll x = min(u,v);
        ll y = max(u,v);
        adj.pb(mp(w,mp(x,y)));
    }

    ll mst()
    {
        dsu d(n);
        d.init();

        sort(adj.begin(),adj.end());

        ll cost = 0;
        FOR(i,0,adj.size())
        {
            ll w = adj[i].ff;
            ll u = adj[i].ss.ff;
            ll v = adj[i].ss.ss;
            
            if(d.root(u) != d.root(v))
            {
                cost += w;
                d.combine(u,v);
            }    
        }
        return cost;
    }
};

//---------------------------------------------------------------------------//


]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>__krushkal</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
