<snippet>
	<content><![CDATA[

//---------------------------------------------------------------------------//

//return number of elements less than or equal to high in [l,r]
typedef ll sdata;

sdata sa[NAX];
vector<sdata> stree[4*NAX];

void build(ll node,ll start,ll end)
{
    if(start==end)
    {
        stree[node].pb(sa[start]);
        return;
    }
    ll mid=(start+end)/2;
    build(2*node+1,start,mid);
    build(2*node+2,mid+1,end);
    merge(stree[2*node+1].begin(),stree[2*node+1].end(),stree[2*node+2].begin(),stree[2*node+2].end(),back_inserter(stree[node]));
}

sdata query(ll node,ll start,ll end,ll l,ll r,ll high)
{
    if(l>end || start>r)
        return 0;

    if(l<=start && end<=r)
        return (upper_bound(stree[node].begin(),stree[node].end(),high) - stree[node].begin());
        
    ll mid=(start+end)/2;
    sdata p1=query(2*node+1,start,mid,l,r,high);
    sdata p2=query(2*node+2,mid+1,end,l,r,high);
    return p1+p2;
}

//---------------------------------------------------------------------------//


]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>__mergeSortTree</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
