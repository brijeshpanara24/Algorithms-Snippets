<snippet>
	<content><![CDATA[

//---------------------------------------------------------------------------//

const ll SZ = 2;
struct matrix
{
    ll arr[SZ][SZ];

    void reset()
    {
        memset(arr, 0, sizeof(arr));
    }

    void makeidentity()
    {
        reset();
        FOR(i,0,SZ)
        arr[i][i] = 1;
    }

    matrix operator + (const matrix &o) const 
    {
        matrix res;
        FOR(i,0,SZ)
        FOR(j,0,SZ)
        res.arr[i][j] = (arr[i][j]+o.arr[i][j])%MOD;
        return res;
    }

    matrix operator * (const matrix &o) const 
    {
        matrix res;
        FOR(i,0,SZ)
        FOR(j,0,SZ)
        {
            res.arr[i][j] = 0;
            FOR(k,0,SZ)
            res.arr[i][j] = (res.arr[i][j] + (arr[i][k]*o.arr[k][j])%MOD)%MOD;
        }
        return res;
    }

    void scan()
    {
        FOR(i,0,SZ)
        FOR(j,0,SZ)
        cin>>arr[i][j];
    }

    void print()
    {
        FOR(i,0,SZ)
        {
            FOR(j,0,SZ)
            cout<<arr[i][j]<<" ";
            cout<<endl;
        }
    }
};

matrix power(matrix a, ll b)
{
    matrix res;
    res.makeidentity();
    while(b>0)
    {
        if(b&1)
        res=res*a;
        a=a*a;
        b>>=1;
    }
    return res;
}

//---------------------------------------------------------------------------//


]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>__matrix</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
